
@using System.ComponentModel.DataAnnotations
@model long?


@{
    var displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName;
    var propertyName = ViewData.ModelMetadata.PropertyName;
    var required = ViewData.ModelMetadata.IsRequired ? "required" : null;

    var errorMessage = string.Empty;
    var requiredAttribute = ViewData.ModelMetadata.ContainerType.GetProperty(propertyName)
        ?.GetCustomAttributes(typeof(RequiredAttribute), false)
        .FirstOrDefault() as RequiredAttribute;

    if (requiredAttribute != null)
    {
        errorMessage = requiredAttribute.ErrorMessage;
    }


    var defaultHtmlAttributesObject = new { type = "number", @class = "form-control", required };
    var htmlAttributesObject = ViewData["htmlAttributes"] ?? new { };
    var htmlAttributes = Html.MergeHtmlAttributes(htmlAttributesObject, defaultHtmlAttributesObject);
}

@if (htmlAttributes.ContainsKey("inputGroup"))
{
    <div class="col-auto mt-3">

        <label for="@propertyName">@displayName</label>

        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <div class="input-group-text">IR</div>
            </div>
            @Html.TextBoxFor(m => m, ViewData.TemplateInfo.FormattedModelValue.ToString(), htmlAttributes)

            @if (required != null)
            {
                <div class="invalid-feedback">
                    @errorMessage
                </div>
            }

        </div>
    </div>

}

@if (!htmlAttributes.ContainsKey("inputGroup"))
{
    <div class="col-auto mt-3">
        <div class="form-group">

            <label for="@propertyName">@displayName</label>
            @Html.TextBoxFor(m => m, ViewData.TemplateInfo.FormattedModelValue.ToString(), htmlAttributes)
            @if (required != null)
            {
                <div class="invalid-feedback">
                    @errorMessage
                </div>
            }

        </div>
    </div>
}
