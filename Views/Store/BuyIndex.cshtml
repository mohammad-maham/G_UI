@using G_APIs.Models
@using G_APIs.Models.ComponentModels
@model OrderVM

@Html.Partial("_FormTitle", new FormTitle()
{
    Icon = Html.Raw("<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"55\" height=\"55\" viewBox=\"0 0 512 512\" id=\"shopping-cart\"><g><path fill=\"#29bdc5\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\" d=\"M502.52,120.67,419.29,309.19H189.16L126.58,96.74H487A17,17,0,0,1,502.52,120.67Z\"></path><path fill=\"none\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\" d=\"M126.63,96.77s0-37-30.79-37h-40\"></path><circle cx=\"419.08\" cy=\"445.67\" r=\"30.07\" fill=\"#29bdc5\" stroke=\"#231f20\" stroke-miterlimit=\"10\" stroke-width=\"15\"></circle><circle cx=\"184.41\" cy=\"445.67\" r=\"30.07\" fill=\"#29bdc5\" stroke=\"#231f20\" stroke-miterlimit=\"10\" stroke-width=\"15\"></circle><circle cx=\"32.3\" cy=\"59.82\" r=\"23.56\" fill=\"#29bdc5\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\"></circle><path fill=\"none\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\" d=\"M463.82,375.89a14.95,14.95,0,0,1-14.95,15H153.29l13.15-29.9,22.76-51.76h31.12l-22.76,51.76H448.87A15,15,0,0,1,463.82,375.89Z\"></path><line x1=\"419.08\" x2=\"364.79\" y1=\"445.67\" y2=\"391.39\" fill=\"none\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\"></line><line x1=\"184.41\" x2=\"240.28\" y1=\"445.67\" y2=\"391.39\" fill=\"none\" stroke=\"#231f20\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"15\"></line></g></svg>"),
    Title = "خرید طلا",
    Description = "صفحه خرید، مشاهده آنی قیمت طلا و مشاهده آنلاین اطلاعات کیف پول"
})

<div class="row gold-row">
    @using (Html.Box("باکس خرید", col: 6))
    {
        <div class="widget-content widget-content-area">
            <form form class="frmBuy" id="frmBuy" action="javascript:void(0);" novalidate>
                @Html.Action("GoldOnlinePrice", new { isBuy = true })
                <hr />
                <div class="col-auto">
                    <label for="Weight">وزن درخواستی (گرم)</label>
                    <div class="mb-3">
                        <input name="Weight" type="number" class="form-control text-right" value="@Model.Weight" aria-describedby="Weight-addon" required>
                        <div class="invalid-feedback">
                            وارد کردن این گزینه الزامیست
                        </div>
                    </div>
                </div>
                <div class="col-auto">
                    <label for="CurrentCalculatedPrice">کل مبلغ</label>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="CurrentCalculatedPrice-addon">ريال</span>
                        </div>
                        <input name="CurrentCalculatedPrice" type="text" class="form-control text-right" value="@Model.CurrentCalculatedPrice.ToString("N0")" aria-describedby="CurrentCalculatedPrice-addon">
                    </div>
                </div>
                <hr />
                <div class="transaction-result">
                    @Html.Partial("_GoldAlert", new GoldAlert
                    {
                        AlertContentTexts = new List<string> { "کاربر محترم، مبلغ کل از کیف پول کسر و به صورت وزن بر حسب گرم به کیف پول شما اضافه خواهد شد." },
                        AlertTitleIcon = "fa fa-bolt fa-xl",
                        AlertTitleText = "نکته",
                        AlertType = GoldAlertTypes.Warning,
                    })
                </div>
                <div class="col-auto field-wrapper command-panel">
                    @Html.Partial("_GoldButton", new GoldButton()
               {
                   ButtonType = GoldButtonTypes.button,
                   Name = "btnBuy",
                   Icon = "fa fa-shopping-basket fa-2x",
                   Class = "btn btn-success",
                   Text = "خرید",
                   OnClick = "confirmBuy()"
               })
                    @Html.Partial("_GoldButton", new GoldButton()
                    {
                        ButtonType = GoldButtonTypes.cancel,
                        Name = "btnCancel"
                    })
                </div>
            </form>
        </div>
    }
    @using (Html.Box(col: 6))
    {
        @Html.Action("Wallet", "Fund", new { ShowButtons = false })
    }
</div>

<script>
    $(function () {
        $("input[name='@nameof(Model.Weight)']").TouchSpin({
            prefix: 'گرم',
            buttondown_class: "btn btn-classic btn-danger",
            buttonup_class: "btn btn-classic btn-success"
        });
        disableBuy();
        $("input[name='@nameof(Model.CurrentCalculatedPrice)'],input[name='@nameof(Model.CurrentOnlinePrice)']").keydown(function (e) {
            e.stopPropagation();
            return false;
        });
        $('#frmBuy').ajaxForm({
            validation: true,
            url: '/Store/SubmitBuy',
            jwt: true,
            blockui: true,
            mixin: true,
            target: ".transaction-result",
            success: function (data) {
                if (data) {
                    swal({
                        title: 'خرید موفق',
                        text: "عملیات خرید با موفقیت انجام یافت",
                        type: 'success',
                        padding: '2em'
                    });
                    setTimeout(() => {
                        location.reload();
                    }, 1500);
                }
                $("input[name='@nameof(Model.Weight)']").val('');
                disableBuy();
                //window.clearTimeout(dowhile);
                //dowhile = null;
            }
        });
    });
    function confirmBuy() {
        swal({
            title: 'تائیدیه خرید کاربر',
            text: "آیا از خرید خود اطمینان دارید؟",
            type: 'question',
            showCancelButton: true,
            cancelButtonText: 'انصراف',
            confirmButtonText: 'تائید',
            padding: '2em'
        }).then(function (result) {
            if (result.value) {
                $('#frmBuy').submit();
            }
        });
    }
    function disableBuy() {
        $("#btnBuy").attr("disabled", "disabled");
        $("input[name='@nameof(Model.CurrentCalculatedPrice)']").val('');
    }
    $("input[name='@nameof(Model.Weight)']").bind('change', function (e) {
        var inpCurrentCalculatedPrice = $("input[name='@nameof(Model.CurrentCalculatedPrice)']");
        var value = $(this).val();
        if (value > 0 && value <= 1000) {
            $.ajax({
                type: 'POST',
                url: '/Store/GetOnlinePrice',
                data: {
                    weight: value,
                    calcType: 1,
                },
                success: function (data) {
                    if ($.isNumeric(data)) {
                        if (data > 0) {
                            $("#btnBuy").removeAttr("disabled", "disabled");
                            var formattedData = Number(data).toLocaleString('en');
                            inpCurrentCalculatedPrice.val(formattedData);
                            inpCurrentCalculatedPrice.css("background-color", "#25b61738");
                            setTimeout(function () {
                                inpCurrentCalculatedPrice.css("background-color", "");
                            }, 1000);
                        }
                    } else {
                        window.location = "/Account/Login";
                    }
                },
                error: function (data) {
                    console.log(data)
                }
            });
        } else {
            disableBuy();
            toast({
                type: 'warning',
                title: "مقدار وزن حداقل 1 و حداکثر 1000 گرم می باشد",
            });
        }
    });
</script>
