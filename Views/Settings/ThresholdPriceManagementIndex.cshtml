@using G_APIs.Models
@using G_APIs.Models.ComponentModels
@model ThresholdsVM
@{
    string currentThresholdPrice = Model.ThresholdCurrentPrice.HasValue ? Model.ThresholdCurrentPrice.Value.ToString("N0") : "0";
}

@Html.Partial("_FormTitle", new FormTitle()
{
    Icon = Html.Raw("<svg width=\"55\" height=\"55\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path opacity=\"0.5\" d=\"M3.17157 7.17157C4.01536 6.32778 5.22954 6.09171 7.25179 6.02566L8.75208 6.00188C9.1435 6 9.55885 6 10 6H14C14.4412 6 14.8565 6 15.2479 6.00188L16.7482 6.02566C18.7705 6.09171 19.9846 6.32778 20.8284 7.17157C22 8.34315 22 10.2288 22 14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H9.99998C6.22876 22 4.34314 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14C2 10.2288 2 8.34315 3.17157 7.17157Z\" fill=\"#1C274C\"/>\r\n<path d=\"M12.75 10C12.75 9.58579 12.4142 9.25 12 9.25C11.5858 9.25 11.25 9.58579 11.25 10V10.0102C10.1612 10.2845 9.25 11.143 9.25 12.3333C9.25 13.7903 10.6151 14.75 12 14.75C12.8242 14.75 13.25 15.2826 13.25 15.6667C13.25 16.0507 12.8242 16.5833 12 16.5833C11.1758 16.5833 10.75 16.0507 10.75 15.6667C10.75 15.2525 10.4142 14.9167 10 14.9167C9.58579 14.9167 9.25 15.2525 9.25 15.6667C9.25 16.857 10.1612 17.7155 11.25 17.9898V18C11.25 18.4142 11.5858 18.75 12 18.75C12.4142 18.75 12.75 18.4142 12.75 18V17.9898C13.8388 17.7155 14.75 16.857 14.75 15.6667C14.75 14.2097 13.3849 13.25 12 13.25C11.1758 13.25 10.75 12.7174 10.75 12.3333C10.75 11.9493 11.1758 11.4167 12 11.4167C12.8242 11.4167 13.25 11.9493 13.25 12.3333C13.25 12.7475 13.5858 13.0833 14 13.0833C14.4142 13.0833 14.75 12.7475 14.75 12.3333C14.75 11.143 13.8388 10.2845 12.75 10.0102V10Z\" fill=\"#1C274C\"/>\r\n<path d=\"M12.0522 1.25H11.9482C11.0497 1.24997 10.3005 1.24995 9.70568 1.32991C9.07789 1.41432 8.51109 1.59999 8.05562 2.05546C7.60015 2.51093 7.41448 3.07773 7.33007 3.70552C7.27275 4.13189 7.25653 5.15147 7.25195 6.02566L8.75224 6.00188C8.75677 5.15523 8.77116 4.24407 8.8167 3.9054C8.87874 3.44393 8.98596 3.24644 9.11628 3.11612C9.24659 2.9858 9.44409 2.87858 9.90555 2.81654C10.3886 2.7516 11.0362 2.75 12.0002 2.75C12.9642 2.75 13.6117 2.7516 14.0948 2.81654C14.5562 2.87858 14.7537 2.9858 14.884 3.11612C15.0144 3.24644 15.1216 3.44393 15.1836 3.9054C15.2292 4.24407 15.2436 5.15523 15.2481 6.00188L16.7484 6.02566C16.7438 5.15147 16.7276 4.13189 16.6702 3.70552C16.5858 3.07773 16.4002 2.51093 15.9447 2.05546C15.4892 1.59999 14.9224 1.41432 14.2946 1.32991C13.6999 1.24995 12.9506 1.24997 12.0522 1.25Z\" fill=\"#1C274C\"/></svg>"),
    Title = "تنظیم قیمت",
    Description = "سرویس تنظیم بازه قیمت خرید و فروش بازار"
})

<div class="row gold-row">
    @using (Html.Box("تنظیم قیمت", col: 6, iconType: BoxIconTypes.form))
    {
        <form form class="frmThreshold" id="frmThreshold" action="javascript:void(0);" novalidate>
            @Html.HiddenFor(x => x.ThresholdCurrentPrice)
            <div class="row">
                <div class="col-md-6 prices">
                    @Html.EditorFor(x => x.ThresholdBuyPrice)
                    @Html.EditorFor(x => x.ThresholdSellPrice)
                </div>
                <div class="col-md-6 percentages">
                    @Html.EditorFor(x => x.ThresholdBuyPercentage)
                    @Html.EditorFor(x => x.ThresholdSellPercentage)
                </div>
                <div class="col-md-6">
                    <div class="col-auto mt-3">
                        @Html.EditorFor(x => x.ThresholdExpireDate, new { HtmlAttributes = new { @class = "date", type = "gold-date", min = "today" } })
                    </div>
                    <div class="col-auto">
                        <label for="@(nameof(Model.IsPercentage))">محاسبه بصورت درصد</label>
                        <div class="form-group">
                            <label class="switch s-icons s-outline s-outline-danger mr-2">
                                <input type="checkbox" name="@(nameof(Model.IsPercentage))" value="@Model.IsPercentage">
                                <span class="slider round"></span>
                            </label>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="n-chk">
                            <div class="form-group">
                                <label class="new-control new-checkbox new-checkbox-rounded new-checkbox-text checkbox-secondary">
                                    <input type="checkbox" class="new-control-input" name="@(nameof(Model.IsOnlinePrice))" value="@Model.IsOnlinePrice">
                                    <span class="new-control-indicator"></span><span class="new-chk-content">با قیمت پایه من محاسبه نکن</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(x => x.CurrentPrice)
                </div>
            </div>
            <div class="submit-result">
                @Html.Partial("_GoldAlert", new GoldAlert
                {
                    AlertContentTexts = new List<string> { "قیمت های حد خرید و فروش و درصد های آن اختیاری می باشد", "در صورت انتخاب قیمت ها، درصد های آن ها توسط سیستم نادیده گرفته خواهد شد", "درصورت انتخاب درصد های معاملاتی، قیمت های آن ها نادیده گرفته خواهد شد", "کاربر گرامی تمام محاسبات توسط سیستم براساس داده های وارد شده محاسبه خواهد شد." },
                    AlertTitleIcon = "fa fa-bolt fa-xl",
                    AlertTitleText = "نکته",
                    AlertType = GoldAlertTypes.Warning,
                })
                @Html.Partial("_GoldAlert", new GoldAlert
                {
                    AlertContentTexts = new List<string> { "در صورت عدم ثبت تاریخ انقضاء، قیمت مربوطه بصورت روزانه (24 ساعت) معتبر خواهد بود" },
                    AlertTitleIcon = "fa fa-bolt fa-xl",
                    AlertTitleText = "نکته",
                    AlertType = GoldAlertTypes.Info,
                })
            </div>
            <div class="col-auto field-wrapper command-panel">
                @Html.Partial("_GoldButton", new GoldButton()
           {
               ButtonType = GoldButtonTypes.button,
               Name = "btnUpdate",
               Icon = "fa fa-save fa-2x",
               Class = "btn btn-success",
               Text = "ثبت قیمت",
               OnClick = "confirmUpdate()"
           })
                @Html.Partial("_GoldButton", new GoldButton()
                {
                    ButtonType = GoldButtonTypes.cancel,
                    Name = "btnCancel"
                })
            </div>
        </form>
    }
    @using (Html.Box("قیمت لحظه ای", col: 6, iconType: BoxIconTypes.info))
    {
        @Html.Action("GoldOnlinePrice", "Store", new { calcType = 0 })
        <hr />
        <div class="row">
            <div class="col-md-6">
                <label for="ThresholdCurrentPrice">قیمت آنلاین من</label>
                <div class="mb-3">
                    <input name="@nameof(Model.ThresholdCurrentPrice)" type="text" class="form-control text-right" value="@currentThresholdPrice" aria-describedby="ThresholdCurrentPrice-addon">
                </div>
            </div>
        </div>
        @Html.Partial("_GoldAlert", new GoldAlert
        {
            AlertContentTexts = new List<string> { "کاربر محترم، درصورت عدم ثبت قیمت مورد نظر خود، سیستم بطور خودکار از قیمت آنلاین بازار داخلی طلا استفاده خواهد کرد." },
            AlertTitleIcon = "fa fa-bolt fa-xl",
            AlertTitleText = "نکته",
            AlertType = GoldAlertTypes.Info,
        })
    }
</div>

<script>
    $(function () {
        $(".percentages input").attr("disabled", "disabled");
        $("input[name='@(nameof(Model.IsPercentage))']").on("change", function () {
            var chacked = $(this).is(":checked");
            $(this).val(chacked ? 1 : 0);
            if (chacked) {
                $(".prices input").attr("disabled", "disabled");
                $(".percentages input").removeAttr("disabled");
            } else {
                $(".percentages input").attr("disabled", "disabled");
                $(".prices input").removeAttr("disabled");
            }
        });
        $("input[name='@(nameof(Model.IsOnlinePrice))']").on("change", function () {
            var chacked = $(this).is(":checked");
            $(this).val(chacked ? 1 : 0);
        });
        $("input[name='@(nameof(Model.CurrentPrice))']").on("change input", function (e) {
            var value = $(this).val();
            if (!value || (value && value < 1)) {
                toast({
                    type: 'error',
                    title: "مقدار قیمت پایه می بایست از 1 بیشتر باشد"
                });
                $(this).val('');
                e.stopPropagation();
                return false;
            }
        });
        $("input[name='@nameof(Model.ThresholdCurrentPrice)']").on("keydown change keypress", function (e) {
            e.stopPropagation();
            return false;
        });
        $('#frmThreshold').ajaxForm({
            validation: true,
            url: '/Settings/SubmitThreshold',
            jwt: true,
            blockui: true,
            mixin: true,
            target: ".submit-result",
            success: function (data) {
                if (data) {
                    if (data.result === false && data.result != undefined) {
                        swal({
                            title: 'عملیات ناموفق',
                            text: data.message,
                            type: 'error',
                            padding: '2em'
                        });
                    }
                    else {
                        swal({
                            title: 'عملیات موفق',
                            text: "عملیات ثبت قیمت با موفقیت انجام یافت",
                            type: 'success',
                            padding: '2em'
                        });
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    }
                }
            }
        });
    });
    function confirmUpdate() {
        swal({
            title: 'تائیدیه ثبت قیمت',
            text: "آیا از ثبت قیمت معاملاتی سیستم اطمینان دارید؟",
            type: 'question',
            showCancelButton: true,
            cancelButtonText: 'انصراف',
            confirmButtonText: 'تائید',
            padding: '2em'
        }).then(function (result) {
            if (result.value) {
                $('#frmThreshold').submit();
            }
        });
    }
</script>

@Html.Partial("_LayoutReport")